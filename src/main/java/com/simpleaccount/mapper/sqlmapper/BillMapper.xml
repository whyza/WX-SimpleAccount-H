<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace：命名空间，其值为某一个dao层类的具体路径
 -->

<mapper namespace="com.simpleaccount.mapper.BillMapper">
    <resultMap type="com.simpleaccount.entry.DateBills" id="dateBillsMapper">
        <id column="date" property="date"/>
        <collection property="dateBills" ofType="com.simpleaccount.entry.BillVo">
            <id column="billid" property="billid"/>
            <result column="billMoney" property="billMoney"/>
            <result column="remarks" property="remarks"/>
            <result column="accountTypeId" property="accountTypeId"/>
            <result column="classfyName" property="classfyName"/>
            <result column="classifyImage" property="classifyImage"/>
            <result column="createtime" property="createtime"/>
            <collection property="billImages" ofType="com.simpleaccount.entry.BillImagesVo">
                <result column="imageUrl" property="imageUrl"/>
            </collection>
        </collection>
    </resultMap>

    <resultMap type="com.simpleaccount.entry.BillDetailsVo" id="billDetailsMap">
        <id column="billid" property="billid"/>
        <result column="billMoney" property="billMoney"/>
        <result column="remarks" property="remarks"/>
        <result column="accountTypeId" property="accountTypeId"/>
        <result column="classify" property="classify"/>
        <result column="classfyName" property="classfyName"/>
        <result column="classifyImage" property="classifyImage"/>
        <result column="createtime" property="createtime"/>
        <result column="date" property="date"/>
        <result column="accountClassifyId" property="accountClassifyId"/>
        <result column="accountClassifyName" property="accountClassifyName"/>
        <result column="address" property="address"/>
        <collection property="billImages" ofType="java.lang.String">
            <result column="imageUrl" property="imageUrl"/>
        </collection>
    </resultMap>

    <select id="selectBillByDateAndUid" resultMap="dateBillsMapper">
		select
        b2.date,
        b1.billid,
        b1.remarks,
        b1.billMoney,
        b1.accountTypeId,
        b1.createtime,
        bi.imageUrl,
        b3.classfyName,
        b3.classifyImage
		from bill as b1
		right JOIN (select distinct b.date from bill as b where year(date)=#{year} AND month(date)=#{month}  And b.userId = #{userId} order by b.date desc) as b2
        on b2.date = b1.date and b1.userId = #{userId}
        left join bill_images as bi on  bi.billId = b1.billid
        left join billclassify b3 on b1.classify = b3.classify
        ORDER BY b2.date desc,b1.createtime desc
    </select>
    <insert id="addBill" useGeneratedKeys="true" keyProperty="billid" parameterType="com.simpleaccount.entry.Bill">
        INSERT INTO bill (userId,billMoney,accountClassifyId,accountTypeId,classify,date,address,remarks)
        VALUES (#{userId},#{billMoney},#{accountClassifyId},#{accountTypeId},#{classify},#{date},#{address},#{remarks})
    </insert>
    <insert id="addBillImage">
        INSERT INTO bill_images (imageUrl,billid)
        VALUES (#{imageUrl},#{billId})
    </insert>
    <delete id="deleteBillById">
        DELETE FROM bill_images  WHERE billid = #{billId};
        DELETE FROM bill  WHERE billid = #{billId}
    </delete>
    <delete id="deleteBillImagesById">
        DELETE FROM bill_images  WHERE billid = #{billId}
    </delete>
    <select id="queryBillDetailsById" parameterType="java.lang.Long" resultMap="billDetailsMap">
          SELECT * FROM bill as b
          LEFT JOIN bill_images as bi ON bi.billid = b.billid
          LEFT JOIN billclassify as bc ON bc.classify = b.classify
          LEFT JOIN accountclassify as ac ON ac.accountClassifyId = b.accountClassifyId
          where  b.billid = #{billId} and b.userId = #{userId}
    </select>
    <update id="updateBill" parameterType="com.simpleaccount.entry.Bill">
        update bill
        <trim prefix="set" suffixOverrides=",">
            <if test="billMoney != null">
                billMoney=#{billMoney},
            </if>
            <if test="accountClassifyId != null">
                accountClassifyId=#{accountClassifyId},
            </if>
            <if test="classify != null">
                classify=#{classify},
            </if>
            <if test="date != null">
                date=#{date},
            </if>
            <if test="address != null">
                address=#{address},
            </if>
            <if test="remarks != null">
                remarks=#{remarks},
            </if>
            <if test="updatetime != null">
                updatetime=#{updatetime},
            </if>
            <if test="accountTypeIdEd != null">
                accountTypeIdEd=#{accountTypeIdEd},
            </if>
        </trim>
        WHERE billid=#{billid}
    </update>
    <select id="queryWeekBill" resultType="com.simpleaccount.entry.BillWeekVo" parameterType="Long">
        SELECT c.classfyName as name,sum(b.billMoney) as nummber,1 as a
        FROM bill as b
        LEFT JOIN billclassify as c ON c.classify = b.classify
        WHERE YEARWEEK(date_format(date,'%Y-%m-%d'),1) = YEARWEEK(now(),1) and b.userId = #{userId} and b.accountTypeId =0
        GROUP BY b.classify
    </select>
    <select id="queryWeekBillForLine" resultType="com.simpleaccount.entry.BillWeekLineVo" parameterType="Long">
        SELECT b.date,sum(b.billMoney) as billMoney
        FROM bill as b
        LEFT JOIN billclassify as c ON c.classify = b.classify
        WHERE YEARWEEK(date_format(date-1,'%Y-%m-%d')) = YEARWEEK(now()) and b.userId = #{userId} and b.accountTypeId =0
        GROUP BY b.date
    </select>
</mapper>